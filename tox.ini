# tox.ini â€” stack-ai
[tox]
envlist = py310, py311, py312, lint, typecheck
isolated_build = true
skip_missing_interpreters = true

# ----------------------------
# Tests unitaires (lib "nue")
# ----------------------------
[testenv]
description = Run unit tests with pytest
deps =
    pytest
    pytest-cov
commands =
    pytest -q --maxfail=1 --disable-warnings --cov=stack_ai --cov-report=term-missing
# (utile si tu utilises HF dans certains tests)
passenv =
    HF_HOME
    TRANSFORMERS_CACHE
    TORCH_HOME
    TORCH_DATA_DIR

# ----------------------------------------------------
# Tests en installant l'extra Hugging Face: ".[hf]"
# Lance: tox -e py311-hf
# ----------------------------------------------------
[testenv:py310-hf]
basepython = python3.10
deps =
    pytest
    pytest-cov
commands =
    pip install ".[hf]"
    pytest -q -k "hf" --maxfail=1 --disable-warnings
passenv = HF_HOME TRANSFORMERS_CACHE TORCH_HOME TORCH_DATA_DIR

[testenv:py311-hf]
basepython = python3.11
deps =
    pytest
    pytest-cov
commands =
    pip install ".[hf]"
    pytest -q -k "hf" --maxfail=1 --disable-warnings
passenv = HF_HOME TRANSFORMERS_CACHE TORCH_HOME TORCH_DATA_DIR

[testenv:py312-hf]
basepython = python3.12
deps =
    pytest
    pytest-cov
commands =
    pip install ".[hf]"
    pytest -q -k "hf" --maxfail=1 --disable-warnings
passenv = HF_HOME TRANSFORMERS_CACHE TORCH_HOME TORCH_DATA_DIR

# -------------
# Lint (ruff)
# -------------
[testenv:lint]
description = Ruff lint
deps = ruff
commands =
    ruff check stack_ai tests examples
skip_install = true

# ----------------
# Type checking
# ----------------
[testenv:typecheck]
description = Mypy type-check
deps = mypy
commands =
    mypy stack_ai
skip_install = true

# -------------
# Pytest config
# -------------
[pytest]
testpaths = tests
addopts = -q
filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning
